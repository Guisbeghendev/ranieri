# Generated by Django 5.2.4 on 2025-07-09 00:24

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AudienceGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nome do Grupo de Audiência')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descrição do Grupo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado Em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado Em')),
            ],
            options={
                'verbose_name': 'Grupo de Audiência',
                'verbose_name_plural': 'Grupos de Audiência',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='Os grupos aos quais este usuário pertence. Um usuário terá todas as permissões concedidas a cada um de seus grupos.', related_name='core_user_groups_set', related_query_name='core_user', to='auth.group', verbose_name='Grupos')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Permissões específicas concedidas a este usuário.', related_name='core_user_permissions_set', related_query_name='core_user_permission', to='auth.permission', verbose_name='Permissões do Usuário')),
                ('audience_groups', models.ManyToManyField(blank=True, help_text='Os grupos de audiência aos quais este usuário pertence para acesso a conteúdo.', related_name='users', to='core.audiencegroup', verbose_name='Grupos de Audiência')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
                'abstract': False,
                'swappable': 'AUTH_USER_MODEL',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Galeria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Título da Galeria')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descrição da Galeria')),
                ('event_date', models.DateField(blank=True, null=True, verbose_name='Data do Evento')),
                ('watermark_file_used', models.CharField(blank=True, max_length=255, null=True, verbose_name="Arquivo de Marca D'água Usado")),
                ('is_public', models.BooleanField(default=False, verbose_name='É Pública?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado Em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado Em')),
                ('audience_groups', models.ManyToManyField(blank=True, help_text='Grupos de audiência que têm acesso a esta galeria.', related_name='accessible_galleries', to='core.audiencegroup', verbose_name='Grupos de Audiência')),
                ('fotografo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_galleries', to=settings.AUTH_USER_MODEL, verbose_name='Fotógrafo Responsável')),
            ],
            options={
                'verbose_name': 'Galeria',
                'verbose_name_plural': 'Galerias',
                'ordering': ['-event_date', '-created_at', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_file_original', models.ImageField(upload_to='galeria_images/originals/', verbose_name='Arquivo de Imagem Original')),
                ('image_file_thumb', models.ImageField(blank=True, null=True, upload_to='galeria_images/thumbnails/', verbose_name='Thumbnail da Imagem')),
                ('original_file_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nome Original do Arquivo')),
                ('watermark_applied', models.BooleanField(default=False, verbose_name="Marca D'água Aplicada?")),
                ('metadata', models.JSONField(blank=True, null=True, verbose_name='Metadados da Imagem')),
                ('order', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Ordem de Exibição')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado Em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado Em')),
                ('galeria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='core.galeria', verbose_name='Galeria Associada')),
            ],
            options={
                'verbose_name': 'Imagem',
                'verbose_name_plural': 'Imagens',
                'ordering': ['galeria', 'order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Data de Nascimento')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Endereço')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='Cidade')),
                ('state', models.CharField(blank=True, max_length=100, null=True, verbose_name='Estado')),
                ('whatsapp', models.CharField(blank=True, max_length=30, null=True, verbose_name='WhatsApp')),
                ('other_contact', models.CharField(blank=True, max_length=255, null=True, verbose_name='Outro Contato')),
                ('quem_sou_para_escola', models.TextField(blank=True, null=True, verbose_name='Quem sou para a Escola?')),
                ('biography', models.TextField(blank=True, null=True, verbose_name='Biografia')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/', verbose_name='Foto de Perfil')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Website / Portfólio')),
                ('last_activity_date', models.DateTimeField(blank=True, null=True, verbose_name='Última Atividade')),
                ('document_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='RA do Aluno')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado Em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado Em')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Perfil',
                'verbose_name_plural': 'Perfis',
            },
        ),
    ]
